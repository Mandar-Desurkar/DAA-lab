#include <stdio.h>

int n, W;
int w[100], profit[100], x[100];
int dp[100][100];

int max(int a, int b) {
    return (a > b) ? a : b;
}

void knapsack() {
    for (int i = 0; i <= n; i++) {
        for (int j = 0; j <= W; j++) {
            if (i == 0 || j == 0) {
                dp[i][j] = 0;
            } else if (j < w[i]) {
                dp[i][j] = dp[i - 1][j];
            } else {
                dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - w[i]] + profit[i]);
            }
            printf("%d\t", dp[i][j]);
        }
        printf("\n");
    }
}

void printsol() {
    int i = n, j = W;
    while (i != 0 && j != 0) {
        if (dp[i][j] != dp[i - 1][j]) {
            x[i] = 1;
            j = j - w[i];
        }
        i--;
    }
}

int main() {
    printf("\nEnter the number of objects: ");
    scanf("%d", &n);

    printf("\nEnter the Knapsack capacity: ");
    scanf("%d", &W);

    printf("\nEnter the weight of objects: ");
    for (int i = 1; i <= n; i++) {
        scanf("%d", &w[i]);
    }

    printf("\nEnter the profit of objects: ");
    for (int i = 1; i <= n; i++) {
        scanf("%d", &profit[i]);
    }

    knapsack();
    printsol();

    printf("\nSelected items (index, weight, profit):\n");
    for (int i = 1; i <= n; i++) {
        if (x[i] == 1) {
            printf("%d\t%d\t%d\n", i, w[i], profit[i]);
        }
    }

    printf("Max profit is %d\n", dp[n][W]);

    return 0;
}
